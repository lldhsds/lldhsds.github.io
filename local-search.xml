<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Centos7.9使用kubeadm部署K8S集群</title>
    <link href="/2024/06/18/Centos7-9%E4%BD%BF%E7%94%A8kubeadm%E9%83%A8%E7%BD%B2K8S%E9%9B%86%E7%BE%A4/"/>
    <url>/2024/06/18/Centos7-9%E4%BD%BF%E7%94%A8kubeadm%E9%83%A8%E7%BD%B2K8S%E9%9B%86%E7%BE%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="Centos7-9使用kubeadm部署K8S集群"><a href="#Centos7-9使用kubeadm部署K8S集群" class="headerlink" title="Centos7.9使用kubeadm部署K8S集群"></a>Centos7.9使用kubeadm部署K8S集群</h1><p>使用kubeadm部署一个k8s集群，单master+2worker节点。</p><h2 id="1-环境信息"><a href="#1-环境信息" class="headerlink" title="1. 环境信息"></a>1. 环境信息</h2><ul><li>操作系统：CentOS 7.9.2009</li><li>内存: 2GB</li><li>CPU: 2</li><li>网络: 能够互访，能够访问互联网</li></ul><table><thead><tr><th>hostname</th><th>ip</th><th>备注</th></tr></thead><tbody><tr><td>k8s-master</td><td>192.168.0.51</td><td>master</td></tr><tr><td>k8s-node1</td><td>192.168.0.52</td><td>worker</td></tr><tr><td>k8s-node2</td><td>192.168.0.53</td><td>worker</td></tr></tbody></table><h2 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2. 准备工作"></a>2. 准备工作</h2><p>在所有节点（包括 Master 和 Worker 节点）上执行以下步骤。</p><h3 id="2-1-linux基础配置"><a href="#2-1-linux基础配置" class="headerlink" title="2.1 linux基础配置"></a>2.1 linux基础配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 关闭防火墙</span><br>systemctl stop firewalld &amp;&amp; systemctl <span class="hljs-built_in">disable</span> firewalld<br><br><span class="hljs-comment"># 关闭 swap</span><br>swapoff -a &amp;&amp; sed -i <span class="hljs-string">&#x27;/ swap / s/^\(.*\)$/#\1/g&#x27;</span> /etc/fstab<br><br><span class="hljs-comment"># 关闭 selinux</span><br>setenforce 0 &amp;&amp; sed -i <span class="hljs-string">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config<br><br><span class="hljs-comment"># 设置时区</span><br>timedatectl set-timezone Asia/Shanghai<br><br><span class="hljs-comment"># 时间同步</span><br>yum -y install ntpdate<br>ntpdate time.windows.com<br>hwclock --systohc<br><br><span class="hljs-comment"># 将桥接的IPv4流量传递到iptables的链</span><br><span class="hljs-built_in">cat</span> &gt; /etc/sysctl.d/k8s.conf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="hljs-string">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="hljs-string">EOF</span><br>sysctl --system  <span class="hljs-comment"># 生效</span><br></code></pre></td></tr></table></figure><h3 id="2-2-安装-Docker"><a href="#2-2-安装-Docker" class="headerlink" title="2.2 安装 Docker"></a>2.2 安装 Docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">添加镜像源</span><br>curl https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -o /etc/yum.repos.d/docker-ce.repo<br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看docker-ce的版本列表</span><br>yum list docker-ce --showduplicates | sort -r<br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装20.10</span><br>yum -y install docker-ce-20.10.6-3.el7<br>systemctl start docker<br>systemctl enable docker<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">换成阿里Docker仓库</span><br>cat &gt; /etc/docker/daemon.json &lt;&lt; EOF<br>&#123;<br>  &quot;registry-mirrors&quot;: [&quot;https://wnsrsn9i.mirror.aliyuncs.com&quot;]<br>&#125;<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启配置生效</span><br>systemctl restart docker<br>docker info<br>...<br> Registry Mirrors:<br>  https://wnsrsn9i.mirror.aliyuncs.com/<br>...<br></code></pre></td></tr></table></figure><h3 id="2-3-安装-kubeadm、kubelet-和-kubectl"><a href="#2-3-安装-kubeadm、kubelet-和-kubectl" class="headerlink" title="2.3 安装 kubeadm、kubelet 和 kubectl"></a>2.3 安装 kubeadm、kubelet 和 kubectl</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">添加镜像源</span><br>cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF<br>[kubernetes]<br>name=Kubernetes<br>baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64<br>enabled=1<br>gpgcheck=0<br>repo_gpgcheck=0<br>gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看支持的版本</span><br>yum list kubelet --showduplicates | sort -r<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装</span><br>yum install -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">配置kubelet服务自启动</span><br>systemctl enable kubelet<br></code></pre></td></tr></table></figure><h2 id="3-部署k8s集群"><a href="#3-部署k8s集群" class="headerlink" title="3. 部署k8s集群"></a>3. 部署k8s集群</h2><p>设置hosts：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">设置主机名</span><br>hostnamectl set-hostname k8s-master  # k8s-node1 / k8s-node2<br>hostname<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">配置 hosts（只在master执行）</span><br>cat &gt;&gt; /etc/hosts &lt;&lt; EOF<br>192.168.0.51 k8s-master<br>192.168.0.52 k8s-node1<br>192.168.0.53 k8s-node2<br>EOF<br></code></pre></td></tr></table></figure><p>初始化master：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">运行初始化命令，apiserver地址为master地址</span><br>kubeadm init \<br>--apiserver-advertise-address=192.168.0.51 \<br>--image-repository registry.aliyuncs.com/google_containers \<br>--kubernetes-version v1.18.0 \<br>--service-cidr=10.96.0.0/12 \<br>--pod-network-cidr=10.244.0.0/16<br><br>...<br>[addons] Applied essential addon: CoreDNS<br>[addons] Applied essential addon: kube-proxy<br><br>Your Kubernetes control-plane has initialized successfully!<br><br>To start using your cluster, you need to run the following as a regular user:<br><br>  mkdir -p $HOME/.kube<br>  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config<br>  sudo chown $(id -u):$(id -g) $HOME/.kube/config<br><br>You should now deploy a pod network to the cluster.<br>Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:<br>  https://kubernetes.io/docs/concepts/cluster-administration/addons/<br><br>Then you can join any number of worker nodes by running the following on each as root:<br><br>kubeadm join 192.168.0.51:6443 --token fxaizi.pb73yzhubpffc9zf \<br>    --discovery-token-ca-cert-hash sha256:95b842305c484ffcdcf3d5ccdeb5ada6ee89f418e77709138b491654e88c88ed<br>...<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">初始化成功后，按照提示执行如下命令</span><br>mkdir -p $HOME/.kube<br>sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config<br>sudo chown $(id -u):$(id -g) $HOME/.kube/config<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看节点列表，此时节点状态为NotReady</span><br>kubectl get nodes<br></code></pre></td></tr></table></figure><p>初始化worker：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubeadm join 192.168.0.51:6443 --token fxaizi.pb73yzhubpffc9zf \<br>    --discovery-token-ca-cert-hash sha256:95b842305c484ffcdcf3d5ccdeb5ada6ee89f418e77709138b491654e88c88ed<br></code></pre></td></tr></table></figure><p>master部署网络插件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml<br>kubectl get pods -n kube-system  # 查看运行状态<br></code></pre></td></tr></table></figure><p>如果无法下载，手动创建kube-flannel.yml，内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Namespace</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">kube-flannel</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">flannel</span><br>    <span class="hljs-attr">pod-security.kubernetes.io/enforce:</span> <span class="hljs-string">privileged</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">flannel</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">flannel</span><br><span class="hljs-attr">rules:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">resources:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">pods</span><br>  <span class="hljs-attr">verbs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">resources:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">nodes</span><br>  <span class="hljs-attr">verbs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">resources:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">nodes/status</span><br>  <span class="hljs-attr">verbs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">patch</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRoleBinding</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">flannel</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">flannel</span><br><span class="hljs-attr">roleRef:</span><br>  <span class="hljs-attr">apiGroup:</span> <span class="hljs-string">rbac.authorization.k8s.io</span><br>  <span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">flannel</span><br><span class="hljs-attr">subjects:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">flannel</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-flannel</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">flannel</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">flannel</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-flannel</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ConfigMap</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">kube-flannel-cfg</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-flannel</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">tier:</span> <span class="hljs-string">node</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">flannel</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">flannel</span><br><span class="hljs-attr">data:</span><br>  <span class="hljs-attr">cni-conf.json:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    &#123;</span><br><span class="hljs-string">      &quot;name&quot;: &quot;cbr0&quot;,</span><br><span class="hljs-string">      &quot;cniVersion&quot;: &quot;0.3.1&quot;,</span><br><span class="hljs-string">      &quot;plugins&quot;: [</span><br><span class="hljs-string">        &#123;</span><br><span class="hljs-string">          &quot;type&quot;: &quot;flannel&quot;,</span><br><span class="hljs-string">          &quot;delegate&quot;: &#123;</span><br><span class="hljs-string">            &quot;hairpinMode&quot;: true,</span><br><span class="hljs-string">            &quot;isDefaultGateway&quot;: true</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">        &#125;,</span><br><span class="hljs-string">        &#123;</span><br><span class="hljs-string">          &quot;type&quot;: &quot;portmap&quot;,</span><br><span class="hljs-string">          &quot;capabilities&quot;: &#123;</span><br><span class="hljs-string">            &quot;portMappings&quot;: true</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">      ]</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string"></span>  <span class="hljs-attr">net-conf.json:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    &#123;</span><br><span class="hljs-string">      &quot;Network&quot;: &quot;10.244.0.0/16&quot;,</span><br><span class="hljs-string">      &quot;EnableNFTables&quot;: false,</span><br><span class="hljs-string">      &quot;Backend&quot;: &#123;</span><br><span class="hljs-string">        &quot;Type&quot;: &quot;vxlan&quot;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string"></span><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">DaemonSet</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">kube-flannel-ds</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-flannel</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">tier:</span> <span class="hljs-string">node</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">flannel</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">flannel</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">flannel</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">tier:</span> <span class="hljs-string">node</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">flannel</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">affinity:</span><br>        <span class="hljs-attr">nodeAffinity:</span><br>          <span class="hljs-attr">requiredDuringSchedulingIgnoredDuringExecution:</span><br>            <span class="hljs-attr">nodeSelectorTerms:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">matchExpressions:</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-attr">key:</span> <span class="hljs-string">kubernetes.io/os</span><br>                <span class="hljs-attr">operator:</span> <span class="hljs-string">In</span><br>                <span class="hljs-attr">values:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">linux</span><br>      <span class="hljs-attr">hostNetwork:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">priorityClassName:</span> <span class="hljs-string">system-node-critical</span><br>      <span class="hljs-attr">tolerations:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">operator:</span> <span class="hljs-string">Exists</span><br>        <span class="hljs-attr">effect:</span> <span class="hljs-string">NoSchedule</span><br>      <span class="hljs-attr">serviceAccountName:</span> <span class="hljs-string">flannel</span><br>      <span class="hljs-attr">initContainers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install-cni-plugin</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">docker.io/flannel/flannel-cni-plugin:v1.4.1-flannel1</span><br>        <span class="hljs-attr">command:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">cp</span><br>        <span class="hljs-attr">args:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">-f</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">/flannel</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/cni/bin/flannel</span><br>        <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cni-plugin</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/opt/cni/bin</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install-cni</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">docker.io/flannel/flannel:v0.25.4</span><br>        <span class="hljs-attr">command:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">cp</span><br>        <span class="hljs-attr">args:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">-f</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">/etc/kube-flannel/cni-conf.json</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">/etc/cni/net.d/10-flannel.conflist</span><br>        <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cni</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/cni/net.d</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">flannel-cfg</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/kube-flannel/</span><br>      <span class="hljs-attr">containers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">kube-flannel</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">docker.io/flannel/flannel:v0.25.4</span><br>        <span class="hljs-attr">command:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/bin/flanneld</span><br>        <span class="hljs-attr">args:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">--ip-masq</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">--kube-subnet-mgr</span><br>        <span class="hljs-attr">resources:</span><br>          <span class="hljs-attr">requests:</span><br>            <span class="hljs-attr">cpu:</span> <span class="hljs-string">&quot;100m&quot;</span><br>            <span class="hljs-attr">memory:</span> <span class="hljs-string">&quot;50Mi&quot;</span><br>        <span class="hljs-attr">securityContext:</span><br>          <span class="hljs-attr">privileged:</span> <span class="hljs-literal">false</span><br>          <span class="hljs-attr">capabilities:</span><br>            <span class="hljs-attr">add:</span> [<span class="hljs-string">&quot;NET_ADMIN&quot;</span>, <span class="hljs-string">&quot;NET_RAW&quot;</span>]<br>        <span class="hljs-attr">env:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">POD_NAME</span><br>          <span class="hljs-attr">valueFrom:</span><br>            <span class="hljs-attr">fieldRef:</span><br>              <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">metadata.name</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">POD_NAMESPACE</span><br>          <span class="hljs-attr">valueFrom:</span><br>            <span class="hljs-attr">fieldRef:</span><br>              <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">metadata.namespace</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">EVENT_QUEUE_DEPTH</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;5000&quot;</span><br>        <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">run</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/run/flannel</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">flannel-cfg</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/kube-flannel/</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">xtables-lock</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/run/xtables.lock</span><br>      <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">run</span><br>        <span class="hljs-attr">hostPath:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">/run/flannel</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cni-plugin</span><br>        <span class="hljs-attr">hostPath:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">/opt/cni/bin</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cni</span><br>        <span class="hljs-attr">hostPath:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">/etc/cni/net.d</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">flannel-cfg</span><br>        <span class="hljs-attr">configMap:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">kube-flannel-cfg</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">xtables-lock</span><br>        <span class="hljs-attr">hostPath:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">/run/xtables.lock</span><br>          <span class="hljs-attr">type:</span> <span class="hljs-string">FileOrCreate</span><br></code></pre></td></tr></table></figure><p>部署flannel会拉取两个镜像，国内网络环境有时候无法顺利拉取，可以从其他地方获取后离线导入当前环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master ~]# docker images<br>REPOSITORY                                                        TAG               IMAGE ID       CREATED        SIZE<br>flannel/flannel                                                   v0.25.4           e6c43605b714   18 hours ago   81MB<br>flannel/flannel-cni-plugin                                        v1.4.1-flannel1   1e3c860c213d   7 weeks ago    10.3MB<br></code></pre></td></tr></table></figure><h2 id="4-创建测试应用"><a href="#4-创建测试应用" class="headerlink" title="4. 创建测试应用"></a>4. 创建测试应用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建一个nginx应用，并暴露到节点外部</span><br>kubectl create deployment nginx --image=nginx<br>kubectl expose deployment nginx --port=80 --type=NodePort<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看部署的应用</span><br>kubectl get pod,svc<br>NAME                        READY   STATUS    RESTARTS   AGE<br>pod/nginx-f89759699-j9lnv   1/1     Running   0          30s<br><br>NAME                 TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE<br>service/kubernetes   ClusterIP   10.96.0.1        &lt;none&gt;        443/TCP        34m<br>service/nginx        NodePort    10.102.197.201   &lt;none&gt;        80:30510/TCP   19s<br></code></pre></td></tr></table></figure><p>通过k8s节点ip+30510端口即可访问nginx。</p>]]></content>
    
    
    <categories>
      
      <category>kubernetes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>K8S</tag>
      
      <tag>kubeadm部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Locust web性能测试实践</title>
    <link href="/2024/06/16/Locust-web%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5/"/>
    <url>/2024/06/16/Locust-web%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="Locust-web性能测试实践"><a href="#Locust-web性能测试实践" class="headerlink" title="Locust web性能测试实践"></a>Locust web性能测试实践</h1><p>Locust 是一个开源的负载测试工具，使用Python语言实现，其简洁、轻量、高效的并发机制基于<code>Gevent</code>协程，可以实现单机模拟生成较高的并发压力。具有分布式和可扩展的特点，能够帮助你评估系统的性能并找到潜在的瓶颈。</p><p><strong>Locust 的主要特点:</strong></p><ol><li><strong>使用 Python 编写测试脚本</strong>：你可以用 Python 编写用户行为脚本，定义各种用户操作和请求。</li><li><strong>分布式测试</strong>：支持分布式测试，允许在多台机器上同时运行，从而模拟大量的并发用户。</li><li><strong>实时 Web 界面</strong>：提供直观的 Web 界面，用于配置测试参数、启动和监控测试。</li><li><strong>可扩展性强</strong>：可以通过编写自定义代码来扩展 Locust 的功能，满足不同测试需求。</li></ol><h2 id="1-安装Locust"><a href="#1-安装Locust" class="headerlink" title="1. 安装Locust"></a>1. 安装Locust</h2><p>使用 pip 进行安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip3 install locust -i https://mirrors.aliyun.com/pypi/simple/<br></code></pre></td></tr></table></figure><p>查看安装版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">locust -V<br></code></pre></td></tr></table></figure><h2 id="2-web-demo应用"><a href="#2-web-demo应用" class="headerlink" title="2. web demo应用"></a>2. web demo应用</h2><p>使用 Python 的 Flask 框架实现一个简单的web服务器，包含主页 (<code>/</code>) 和关于页 (<code>/about</code>)，用于Locust执行测试。</p><h3 id="2-1-安装Flask"><a href="#2-1-安装Flask" class="headerlink" title="2.1 安装Flask"></a>2.1 安装Flask</h3><p>使用pip安装：</p><p><code>pip3 install flask -i https://mirrors.aliyun.com/pypi/simple/</code></p><h3 id="2-2-创建Flask应用"><a href="#2-2-创建Flask应用" class="headerlink" title="2.2 创建Flask应用"></a>2.2 创建Flask应用</h3><p>新建一个名为 <code>app.py</code> 的文件，编写如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, jsonify<br><br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> jsonify(message=<span class="hljs-string">&quot;Welcome to the homepage!&quot;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/about&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">about</span>():<br>    <span class="hljs-keyword">return</span> jsonify(message=<span class="hljs-string">&quot;This is the about page.&quot;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(debug=<span class="hljs-literal">True</span>, host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">5000</span>)<br><br></code></pre></td></tr></table></figure><h3 id="2-3-运行-Flask-应用"><a href="#2-3-运行-Flask-应用" class="headerlink" title="2.3 运行 Flask 应用"></a>2.3 运行 Flask 应用</h3><p>在终端中运行以下命令启动 Flask 服务器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python app.py<br></code></pre></td></tr></table></figure><p>默认情况下，Flask 服务器会在 <code>http://localhost:5000</code> 运行。你可以通过浏览器访问这个地址，查看主页和关于页是否正常显示。</p><h2 id="3-运行模式"><a href="#3-运行模式" class="headerlink" title="3. 运行模式"></a>3. 运行模式</h2><p>Locust支持单机模式、分布式模式和无头模式。每种模式适用于不同的测试场景。</p><h3 id="3-1-单机模式"><a href="#3-1-单机模式" class="headerlink" title="3.1 单机模式"></a>3.1 单机模式</h3><p>适用于小规模测试。简单直接，只需在一台机器上运行 Locust。</p><p>一个简单的 Locust 测试脚本如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># locust-test1.py</span><br><span class="hljs-keyword">from</span> locust <span class="hljs-keyword">import</span> HttpUser, TaskSet, task, between<br><br><span class="hljs-comment"># 定义一个任务类继承TaskSet类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">UserBehavior</span>(<span class="hljs-title class_ inherited__">TaskSet</span>):<br>    <span class="hljs-comment"># @task(1) 是装饰器，声明此方法是一个任务，权重为1。权重不写的话默认为1</span><br><span class="hljs-meta">    @task(<span class="hljs-params"><span class="hljs-number">1</span></span>)</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>(<span class="hljs-params">self</span>):<br>        self.client.get(<span class="hljs-string">&quot;/&quot;</span>)<br>    <span class="hljs-comment"># @task(2) 是装饰器，声明此方法是一个任务，权重为2</span><br><span class="hljs-meta">    @task(<span class="hljs-params"><span class="hljs-number">2</span></span>)</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">about</span>(<span class="hljs-params">self</span>):<br>        self.client.get(<span class="hljs-string">&quot;/about&quot;</span>)<br><br><span class="hljs-comment"># 定义一个运行类继承HttpUser类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">WebsiteUser</span>(<span class="hljs-title class_ inherited__">HttpUser</span>):<br>    tasks = [UserBehavior]<br>    wait_time = between(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>)<br>    host = <span class="hljs-string">&quot;http://localhost:5000&quot;</span><br></code></pre></td></tr></table></figure><p>在这个脚本中，我们定义了一个 <code>UserBehavior</code> 类，其中包含两个任务：访问主页（<code>index</code>）和访问关于页（<code>about</code>）。然后我们定义了一个 <code>WebsiteUser</code> 类，指定用户行为、请求之间的等待时间以及测试的web服务器。</p><p><strong>运行 Locust</strong>：</p><p>在终端中运行以下命令启动 Locust：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">locust -f locust-test1.py<br></code></pre></td></tr></table></figure><p><strong>配置和启动测试</strong>：</p><p>打开浏览器访问 <code>http://localhost:8089</code>，在 Locust 的 Web 界面中设置测试参数，设置并发用户数为50，设置每秒增加的用户数为10，即以多快的速度增加用户。测试host为本机运行的flask服务器，运行时间为60秒。然后启动测试。</p><img src="/2024/06/16/Locust-web%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5/%E8%AE%BE%E7%BD%AE%E5%8F%82%E6%95%B0.png" class="" title="设置参数"><p>结果结果统计：</p><img src="/2024/06/16/Locust-web%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5/%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C%E7%BB%9F%E8%AE%A1.png" class="" title="测试结果统计"><p>图标性能曲线：</p><img src="/2024/06/16/Locust-web%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5/%E6%80%A7%E8%83%BD%E6%9B%B2%E7%BA%BF.png" class="" title="性能曲线"><p>测试报告下载：</p><img src="/2024/06/16/Locust-web%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5/report.png" class="" title="report"><h3 id="3-2-分布式模式"><a href="#3-2-分布式模式" class="headerlink" title="3.2 分布式模式"></a>3.2 分布式模式</h3><p>适用于大规模测试。支持多台机器协同工作，能够模拟大量并发用户，包括 master 和 worker 节点，worker节点产生负载， master 节点主要负责协调和收集来自多个 worker 节点的数据。</p><p><strong>运行方法</strong>：</p><ul><li><p>启动 master：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">locust -f locust-test1.py --master<br></code></pre></td></tr></table></figure></li><li><p>启动 worker：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">worker机器同样需要安装locust</span><br>locust -f locust-test1.py --worker --master-host=&lt;master_ip&gt;<br></code></pre></td></tr></table></figure></li></ul><p>worker运行后，master侧命令行会有worker已连接的打印，可以看到当前master下面连接的worker数量。</p><p>在浏览器中打开 <code>http://&lt;master_ip&gt;:8089</code>，配置测试参数并启动测试：</p><img src="/2024/06/16/Locust-web%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5/charts.png" class="" title="charts"><h3 id="3-3-无头模式（Headless-Mode）"><a href="#3-3-无头模式（Headless-Mode）" class="headerlink" title="3.3 无头模式（Headless Mode）"></a>3.3 无头模式（Headless Mode）</h3><p>适用于持续集成（CI）环境或不需要图形界面的场景。可以自动执行测试，并将结果输出到控制台或文件中。</p><p><strong>运行方法</strong>：</p><p>使用命令行参数配置和启动测试：</p><p><code>locust -f locust-test1.py --headless -u 100 -r 10 -H http://192.168.0.210:5000 --run-time 1m  --csv=results</code></p><p><strong>参数说明</strong>：</p><ul><li><code>--headless</code>：无头模式运行。</li><li><code>-u</code> 或 <code>--users</code>：模拟的用户数。</li><li><code>-r</code> 或 <code>--spawn-rate</code>：每秒启动的用户数。</li><li><code>--run-time</code>：测试运行时间，例如 <code>1m</code> 表示 1 分钟。</li><li><code>--csv</code>：将测试结果输出到 CSV 文件。</li></ul><h3 id="3-4-总结"><a href="#3-4-总结" class="headerlink" title="3.4 总结"></a>3.4 总结</h3><ul><li><strong>单机模式</strong> 适用于简单的小规模测试。</li><li><strong>分布式模式</strong> 适用于大规模测试，通过多个 worker 节点协同工作来模拟大量并发用户。</li><li><strong>无头模式</strong> 适用于自动化测试和持续集成环境，可以在没有图形界面的情况下运行测试并输出结果。</li></ul><h2 id="4-locust运行参数说明"><a href="#4-locust运行参数说明" class="headerlink" title="4. locust运行参数说明"></a>4. locust运行参数说明</h2><table><thead><tr><th>命令行选项</th><th>环境变量</th><th>配置文件字段</th><th>描述说明</th></tr></thead><tbody><tr><td><code>-f, --locustfile</code></td><td><code>LOCUST_LOCUSTFILE</code></td><td><code>locustfile</code></td><td>要导入的Python模块文件，例如’..&#x2F;other.py’。默认为locustfile。</td></tr><tr><td><code>-H, --host</code></td><td><code>LOCUST_HOST</code></td><td><code>host</code></td><td>负载测试主机地址，例如’<a href="https://www.baidu.com'./">https://www.baidu.com&#39;。</a></td></tr><tr><td><code>-u, --users</code></td><td><code>LOCUST_USERS</code></td><td><code>users</code></td><td>并发用户数。主要与<code>--headless</code>一起使用。您可以在测试期间使用”w”和”W”（增加1或10个用户）以及”s”和”S”（停止1或10个用户）来更改。</td></tr><tr><td><code>-r, --spawn-rate</code></td><td><code>LOCUST_SPAWN_RATE</code></td><td><code>spawn-rate</code></td><td>每秒产生用户的速率。主要与<code>--headless</code>一起使用。</td></tr><tr><td><code>--hatch-rate</code></td><td><code>LOCUST_HATCH_RATE</code></td><td><code>hatch-rate</code></td><td>启动虚拟用户的速率。</td></tr><tr><td><code>-t, --run-time</code></td><td><code>LOCUST_RUN_TIME</code></td><td><code>run-time</code></td><td>在指定的时间段后停止测试，例如（300s、20m、3h、1h30m等）。仅与<code>--headless</code>一起使用。默认为永久运行。</td></tr><tr><td><code>--web-host</code></td><td><code>LOCUST_WEB_HOST</code></td><td><code>web-host</code></td><td>绑定Web界面的主机。默认为’*’（所有接口）。</td></tr><tr><td><code>--web-port, -P</code></td><td><code>LOCUST_WEB_PORT</code></td><td><code>web-port</code></td><td>运行Web主机的端口地址。默认为8089。</td></tr><tr><td><code>--headless</code></td><td><code>LOCUST_HEADLESS</code></td><td><code>headless</code></td><td>禁用Web界面，立即开始负载测试。需要指定<code>-u</code>和<code>-t</code>。</td></tr><tr><td><code>--autostart</code></td><td><code>LOCUST_AUTOSTART</code></td><td><code>autostart</code></td><td>立即开始测试（不禁用Web UI）。使用<code>-u</code>和<code>-t</code>控制用户数和运行时间。</td></tr><tr><td><code>--autoquit</code></td><td><code>LOCUST_AUTOQUIT</code></td><td><code>autoquit</code></td><td>在测试运行完成后 X 秒后完全退出 Locust。仅与<code>--autostart</code>一起使用。默认为保持Locust运行，直到使用 CTRL+C 关闭。</td></tr><tr><td><code>--headful</code></td><td><code>LOCUST_HEADFUL</code></td><td><code>headful</code></td><td>启用Headful模式。</td></tr><tr><td><code>--web-auth</code></td><td><code>LOCUST_WEB_AUTH</code></td><td><code>web-auth</code></td><td>使用基本身份验证打开Web界面。格式为username:password。</td></tr><tr><td><code>--tls-cert</code></td><td><code>LOCUST_TLS_CERT</code></td><td><code>tls-cert</code></td><td>用于HTTPS服务的TLS证书的路径。</td></tr><tr><td><code>--tls-key</code></td><td><code>LOCUST_TLS_KEY</code></td><td><code>tls-key</code></td><td>用于HTTPS服务的TLS私钥的路径。</td></tr><tr><td><code>--master</code></td><td><code>LOCUST_MODE_MASTER</code></td><td><code>master</code></td><td>以Master模式运行，用于分布式负载测试。</td></tr><tr><td><code>--master-bind-host</code></td><td><code>LOCUST_MASTER_BIND_HOST</code></td><td><code>master-bind-host</code></td><td>Master节点绑定的主机名或IP地址。仅在与<code>--master</code>一起使用。默认为’*’（所有可用接口）。</td></tr><tr><td><code>--master-bind-port</code></td><td><code>LOCUST_MASTER_BIND_PORT</code></td><td><code>master-bind-port</code></td><td>Master节点绑定的端口。仅在与<code>--master</code>一起使用。默认为5557。</td></tr><tr><td><code>--expect-workers</code></td><td><code>LOCUST_EXPECT_WORKERS</code></td><td><code>expect-workers</code></td><td>预期的分布式客户端数量。仅在与<code>--headless</code>一起使用时生效。</td></tr><tr><td><code>--expect-workers-max-wait</code></td><td><code>LOCUST_EXPECT_WORKERS_MAX_WAIT</code></td><td><code>expect-workers-max-wait</code></td><td>等待Worker连接的最长时间。默认为永远等待。</td></tr><tr><td><code>--worker</code></td><td><code>LOCUST_MODE_WORKER</code></td><td><code>worker</code></td><td>以Worker模式运行，用于分布式负载测试。</td></tr><tr><td><code>--master-host</code></td><td><code>LOCUST_MASTER_NODE_HOST</code></td><td><code>master-host</code></td><td>Master节点的主机名或IP地址。仅在与<code>--worker</code>一起使用。默认为127.0.0.1。</td></tr><tr><td><code>--master-port</code></td><td><code>LOCUST_MASTER_NODE_PORT</code></td><td><code>master-port</code></td><td>Master节点使用的端口。仅在与<code>--worker</code>一起使用。默认为5557。</td></tr><tr><td><code>-T, --tags</code></td><td><code>LOCUST_TAGS</code></td><td><code>tags</code></td><td>测试中要包含的标签列表，仅执行具有任何匹配标签的任务。</td></tr><tr><td><code>-E, --exclude-tags</code></td><td><code>LOCUST_EXCLUDE_TAGS</code></td><td><code>exclude-tags</code></td><td>要从测试中排除的标签列表，仅执行没有匹配标签的任务。</td></tr><tr><td><code>--csv</code></td><td><code>LOCUST_CSV</code></td><td><code>csv</code></td><td>将请求统计信息以CSV格式存储到文件中。</td></tr><tr><td><code>--csv-full-history</code></td><td><code>LOCUST_CSV_FULL_HISTORY</code></td><td><code>csv-full-history</code></td><td>将每个统计信息条目以CSV格式存储到_stats_history.csv文件中。</td></tr><tr><td><code>--print-stats</code></td><td><code>LOCUST_PRINT_STATS</code></td><td><code>print-stats</code></td><td>在控制台中周期性打印统计信息。</td></tr><tr><td><code>--only-summary</code></td><td><code>LOCUST_ONLY_SUMMARY</code></td><td><code>only-summary</code></td><td>仅打印摘要统计信息。</td></tr><tr><td><code>--reset-stats</code></td><td><code>LOCUST_RESET_STATS</code></td><td><code>reset-stats</code></td><td>完成后重置统计信息。在分布式模式下，应在Master和Worker上设置。</td></tr><tr><td><code>--html</code></td><td><code>LOCUST_HTML</code></td><td><code>html</code></td><td>将HTML报告存储到指定的文件路径。</td></tr><tr><td><code>--skip-log-setup</code></td><td><code>LOCUST_SKIP_LOG_SETUP</code></td><td><code>skip-log-setup</code></td><td>禁用Locust的日志记录设置。</td></tr><tr><td><code>--loglevel, -L</code></td><td><code>LOCUST_LOGLEVEL</code></td><td><code>loglevel</code></td><td>日志级别，选择DEBUG&#x2F;INFO&#x2F;WARNING&#x2F;ERROR&#x2F;CRITICAL。默认为INFO。</td></tr><tr><td><code>--logfile</code></td><td><code>LOCUST_LOGFILE</code></td><td><code>logfile</code></td><td>日志文件的路径。如果未设置，日志将输出到stderr。</td></tr><tr><td><code>--exit-code-on-error</code></td><td><code>LOCUST_EXIT_CODE_ON_ERROR</code></td><td><code>exit-code-on-error</code></td><td>在测试结果包含任何失败或错误时设置退出代码。默认为1。</td></tr><tr><td><code>-s, --stop-timeout</code></td><td><code>LOCUST_STOP_TIMEOUT</code></td><td><code>stop-timeout</code></td><td>退出之前等待模拟用户完成的任务的秒数。仅在运行Locust分布式时设置在主进程上。</td></tr></tbody></table><p>有关更多详细信息，包括如何使用文件或环境变量设置选项，请参阅文档：<a href="https://docs.locust.io/en/stable/configuration.html">https://docs.locust.io/en/stable/configuration.html</a></p><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><ol><li><p>官方文档：<a href="http://docs.locust.io/en/stable/installation.html">http://docs.locust.io/en/stable/installation.html</a></p></li><li><p>Locust性能测试之快速入门: <a href="https://www.cnblogs.com/xyztank/articles/16932194.html">https://www.cnblogs.com/xyztank/articles/16932194.html</a></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>测试架构师</category>
      
    </categories>
    
    
    <tags>
      
      <tag>locust</tag>
      
      <tag>web性能测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2024/06/16/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2024/06/16/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试文章</p><img src="/2024/06/16/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/stoneman.jpeg" class="" title="图片引用">]]></content>
    
    
    <categories>
      
      <category>Test</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/06/16/hello-world/"/>
    <url>/2024/06/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
